// Code generated by MockGen. DO NOT EDIT.
// Source: internal/discovery/discovery.go
//
// Generated by this command:
//
//	mockgen -source=internal/discovery/discovery.go -destination=internal/discovery/mock/discovery_mock.go
//

// Package mock_discovery is a generated GoMock package.
package mock_discovery

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockServiceDiscovery is a mock of ServiceDiscovery interface.
type MockServiceDiscovery struct {
	ctrl     *gomock.Controller
	recorder *MockServiceDiscoveryMockRecorder
}

// MockServiceDiscoveryMockRecorder is the mock recorder for MockServiceDiscovery.
type MockServiceDiscoveryMockRecorder struct {
	mock *MockServiceDiscovery
}

// NewMockServiceDiscovery creates a new mock instance.
func NewMockServiceDiscovery(ctrl *gomock.Controller) *MockServiceDiscovery {
	mock := &MockServiceDiscovery{ctrl: ctrl}
	mock.recorder = &MockServiceDiscoveryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockServiceDiscovery) EXPECT() *MockServiceDiscoveryMockRecorder {
	return m.recorder
}

// Discover mocks base method.
func (m *MockServiceDiscovery) Discover(name string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Discover", name)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Discover indicates an expected call of Discover.
func (mr *MockServiceDiscoveryMockRecorder) Discover(name any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Discover", reflect.TypeOf((*MockServiceDiscovery)(nil).Discover), name)
}

// Register mocks base method.
func (m *MockServiceDiscovery) Register() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Register")
	ret0, _ := ret[0].(error)
	return ret0
}

// Register indicates an expected call of Register.
func (mr *MockServiceDiscoveryMockRecorder) Register() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Register", reflect.TypeOf((*MockServiceDiscovery)(nil).Register))
}
