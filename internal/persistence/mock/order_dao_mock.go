// Code generated by MockGen. DO NOT EDIT.
// Source: internal/persistence/order_dao.go
//
// Generated by this command:
//
//	mockgen -source=internal/persistence/order_dao.go -destination=internal/persistence/mock/order_dao_mock.go
//

// Package mock_persistence is a generated GoMock package.
package mock_persistence

import (
	model "order-service/internal/model"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockOrderDAO is a mock of OrderDAO interface.
type MockOrderDAO struct {
	ctrl     *gomock.Controller
	recorder *MockOrderDAOMockRecorder
}

// MockOrderDAOMockRecorder is the mock recorder for MockOrderDAO.
type MockOrderDAOMockRecorder struct {
	mock *MockOrderDAO
}

// NewMockOrderDAO creates a new mock instance.
func NewMockOrderDAO(ctrl *gomock.Controller) *MockOrderDAO {
	mock := &MockOrderDAO{ctrl: ctrl}
	mock.recorder = &MockOrderDAOMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOrderDAO) EXPECT() *MockOrderDAOMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockOrderDAO) Create(order model.Order) (model.Order, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", order)
	ret0, _ := ret[0].(model.Order)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockOrderDAOMockRecorder) Create(order any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockOrderDAO)(nil).Create), order)
}
